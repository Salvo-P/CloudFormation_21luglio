Description: "Esercizio del 21 Luglio 2023, Workshop CloudFormation Pizzuto"

Resources:
  VPCDevOps:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
        - Key: Nome
          Value: "Salvatore"
        - Key: Cognome
          Value: "Pizzuto"
        - Key: Environment
          Value: DevOpsAcademy

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCDevOps
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: True
      AvailabilityZone: eu-west-1a
      Tags:
        - Key: Nome
          Value: "Salvatore"
        - Key: Cognome
          Value: "Pizzuto"
        - Key: Environment
          Value: DevOpsAcademy

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCDevOps
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: True
      AvailabilityZone: eu-west-1b
      Tags:
        - Key: Nome
          Value: "Salvatore"
        - Key: Cognome
          Value: "Pizzuto"
        - Key: Environment
          Value: DevOpsAcademy

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
          - Key: Nome
            Value: "Salvatore"
          - Key: Cognome
            Value: "Pizzuto"
          - Key: Environment
            Value: DevOpsAcademy

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPCDevOps
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCDevOps

  Route:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTable

  ASGLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: "lauuunch"
      LaunchTemplateData:
        ImageId: ami-06935448000742e6b
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref SecurityGroup
        UserData:
          Fn::Base64: |
            #!/bin/bash 
            yum update -y 
            yum install -y httpd php php-mysql 
            systemctl enable httpd 
            systemctl start httpd 
            echo "<?php phpinfo(); ?>" > /var/www/html/index.php 
            chkconfig httpd on

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCDevOps
      Tags:
        - Key: Nome
          Value: "Salvatore"
        - Key: Cognome
          Value: "Pizzuto"
        - Key: Environment
          Value: DevOpsAcademy

  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPCDevOps
      Tags:
        - Key: Nome
          Value: "Salvatore"
        - Key: Cognome
          Value: "Pizzuto"
        - Key: Environment
          Value: DevOpsAcademy

  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: Autoscaling
      MinSize: '1'
      MaxSize: '1'
      DesiredCapacity: '1'
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: !Ref ASGLaunchTemplate
        Version: !GetAtt ASGLaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      LoadBalancerNames:
        - !Ref LoadBalancer

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPCDevOps
      Tags:
        - Key: Nome
          Value: "Salvatore"
        - Key: Cognome
          Value: "Pizzuto"
        - Key: Environment
          Value: DevOpsAcademy

  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      CrossZone: 'true'
      Listeners:
        - LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      SecurityGroups:
        - !Ref ELBSecurityGroup
      Tags:
        - Key: Nome
          Value: "Salvatore"
        - Key: Cognome
          Value: "Pizzuto"
        - Key: Environment
          Value: DevOpsAcademy
